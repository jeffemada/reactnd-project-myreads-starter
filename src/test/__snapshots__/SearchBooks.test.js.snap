// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a SearchBooks 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBooks
    myBooks={
      Array [
        Object {
          "authors": Array [
            "Julie Ratner",
          ],
          "id": "sKvi5fVL-uAC",
          "imageLinks": Object {
            "smallThumbnail": "http://books.google.com/books/content?id=sKvi5fVL-uAC&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api",
            "thumbnail": "http://books.google.com/books/content?id=sKvi5fVL-uAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
          },
          "shelf": "read",
          "title": "Human Factors and Web Development",
        },
        Object {
          "authors": Array [
            "Cassio de Sousa Antonio",
          ],
          "id": "PKpPCwAAQBAJ",
          "imageLinks": Object {
            "thumbnail": "http://books.google.com/books/content?id=PKpPCwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
          },
          "shelf": "wantToRead",
          "title": "Pro React",
        },
      ]
    }
    onCloseSearch={[MockFunction]}
    onLoading={[MockFunction]}
    onRefresh={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="search-books-bar"
        >
          <Link
            className="close-search"
            replace={false}
            to="/"
          >
            Close
          </Link>
          <div
            className="search-books-input-wrapper"
          >
            <input
              onChange={[Function]}
              placeholder="Search by title or author"
              type="text"
            />
          </div>
        </div>,
        <div
          className="search-books-results"
        >
          <BooksGrid
            books={Array []}
            onLoading={[MockFunction]}
            onRefresh={[Function]}
          />
        </div>,
      ],
      "className": "search-books",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="close-search"
              replace={false}
              to="/"
            >
              Close
            </Link>,
            <div
              className="search-books-input-wrapper"
            >
              <input
                onChange={[Function]}
                placeholder="Search by title or author"
                type="text"
              />
            </div>,
          ],
          "className": "search-books-bar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Close",
              "className": "close-search",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Close",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                onChange={[Function]}
                placeholder="Search by title or author"
                type="text"
              />,
              "className": "search-books-input-wrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Search by title or author",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <BooksGrid
            books={Array []}
            onLoading={[MockFunction]}
            onRefresh={[Function]}
          />,
          "className": "search-books-results",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "books": Array [],
            "onLoading": [MockFunction],
            "onRefresh": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="search-books-bar"
          >
            <Link
              className="close-search"
              replace={false}
              to="/"
            >
              Close
            </Link>
            <div
              className="search-books-input-wrapper"
            >
              <input
                onChange={[Function]}
                placeholder="Search by title or author"
                type="text"
              />
            </div>
          </div>,
          <div
            className="search-books-results"
          >
            <BooksGrid
              books={Array []}
              onLoading={[MockFunction]}
              onRefresh={[Function]}
            />
          </div>,
        ],
        "className": "search-books",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="close-search"
                replace={false}
                to="/"
              >
                Close
              </Link>,
              <div
                className="search-books-input-wrapper"
              >
                <input
                  onChange={[Function]}
                  placeholder="Search by title or author"
                  type="text"
                />
              </div>,
            ],
            "className": "search-books-bar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Close",
                "className": "close-search",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Close",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  onChange={[Function]}
                  placeholder="Search by title or author"
                  type="text"
                />,
                "className": "search-books-input-wrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "Search by title or author",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <BooksGrid
              books={Array []}
              onLoading={[MockFunction]}
              onRefresh={[Function]}
            />,
            "className": "search-books-results",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "books": Array [],
              "onLoading": [MockFunction],
              "onRefresh": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
